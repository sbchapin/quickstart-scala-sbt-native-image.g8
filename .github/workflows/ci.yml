name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        scala: [ 2.12.0, 2.12.15 ]
        java: [ adopt@1.8, adopt@1.11, graalvm-ce-java11@21.1.0 ]
    runs-on: ${{ matrix.os }}
    steps:

      - name: Configure git
        run: "git config --global core.autocrlf false"
        shell: bash

      - name: Checkout current branch (partial, up to 100 depth)
        uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Test the template
        run: sbt --client '++${{ matrix.scala }}; test'
        shell: bash

      - name: Use the template
        run: sbt --client "++${{ matrix.scala }}; new file://`pwd`" --name=templated-under-test --force
        shell: bash

      - name: Fat jar
        working-directory: ./templated-under-test
        run: sbt --client '++${{ matrix.scala }}; app/assembly"
        shell: bash

      - name: Native package
        if: ${{ matrix.os == 'ubuntu-latest' }} # Graal packaging must use only Unix for libc bindings
        working-directory: ./templated-under-test
        run: sbt --client '++${{ matrix.scala }}; app/graalvm-native-image:packageBin"
        shell: bash

      - name: Performance benchmarks
        if: ${{ matrix.java == 'adopt@1.8' or matrix.java == 'adopt@1.11' }} # JMH must use OpenJDK for accuracy
        working-directory: ./templated-under-test
        run: sbt --client '++${{ matrix.scala }}; benchmarks/Jmh/run"
        shell: bash
