name: Continuous Integration

on: [push]

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        scala: [ 2.12.0, 2.12.15 ]
        java: [ adopt@1.8, adopt@1.11, graalvm-ce-java11@21.1.0 ]
    runs-on: ${{ matrix.os }}
    steps:

      # Set up:

      - name: Configure git
        run: "git config --global core.autocrlf false"
        shell: bash

      - name: Checkout current branch (partial, up to 100 depth)
        uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      # Test the g8 template application:

      - name: Test the template
        run: sbt --client '++${{ matrix.scala }}; test'
        shell: bash

  benchmark:
    name: Benchmark
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        java: [ adopt@1.11 ] # JMH must use OpenJDK for benchmark accuracy
    runs-on: ${{ matrix.os }}
    steps:

      # Set up:

      - name: Configure git
        run: "git config --global core.autocrlf false"
        shell: bash

      - name: Checkout current branch (partial, up to 100 depth)
        uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      # Eject the g8 template:

      - name: Eject an instance of the template
        run: sbt "g8"
        shell: bash

      # Benchmark the materialized template:

      - name: Performance benchmarks      
        working-directory: ./target/g8
        run: sbt --client 'measure'
        shell: bash

  docker:
    name: Docker native-image
    runs-on: ubuntu-latest
    steps:

      # Set up:

      - name: Configure git
        run: "git config --global core.autocrlf false"
        shell: bash

      - name: Checkout current branch (partial, up to 100 depth)
        uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: adopt@1.11

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Eject the g8 template:

      - name: Eject an instance of the template
        run: sbt "g8"
        shell: bash

      # Build and run docker image:

      - name: docker build
        working-directory: ./target/g8
        run: |
          docker build -t sbchapin/quickstart-scala-sbt-native-image-example:test .

      - name: docker run "hi" program
        working-directory: ./target/g8
        run: |
          docker run --rm sbchapin/quickstart-scala-sbt-native-image-example:test hi

      - name: docker run "pi" program
        working-directory: ./target/g8
        run: |
          docker run --rm sbchapin/quickstart-scala-sbt-native-image-example:test pi
